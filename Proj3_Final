
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Scrollable File Contents Viewer class
class FileContentsViewer(swing.JFrame):
   import os
   import java
   def __init__(self, directory=""):
      swing.JFrame.__init__(self, title="File Contents Viewer", size=(500,350))
      self.contentPane.layout = java.awt.BorderLayout()
      
      filesList = self.listFilesInDirectory(directory)
      
      self.files = swing.JList(filesList)
      pane = swing.JScrollPane(self.files)
      self.contentPane.add(pane, java.awt.BorderLayout.CENTER)
      
      
      ""
      fileView = swing.JButton("View Contents", size=(65,30),
                               actionPerformed = self.fileView)
      self.contentPane.add(fileView, java.awt.BorderLayout.WEST)
      ""
      changeDir = swing.JButton("Change Directory", size=(65,30),
                               actionPerformed = self.changeDirectory)
      self.contentPane.add(changeDir, java.awt.BorderLayout.SOUTH)
      ""
      smallFrame = swing.JPanel(java.awt.GridLayout(0,1))
      smallFrame.add(swing.JButton("1", actionPerformed=self.first))
      smallFrame.add(swing.JButton("2", actionPerformed=self.second))
      smallFrame.add(swing.JButton("3", actionPerformed=self.testing))
      smallFrame.add(swing.JButton("3", actionPerformed=self.testing))
      smallFrame.add(swing.JButton("3", actionPerformed=self.testing))
      smallFrame.add(swing.JButton("3", actionPerformed=self.testing))
      self.contentPane.add(smallFrame, java.awt.BorderLayout.EAST)
      
      self.pack()
      self.visible = true
   #END DEF
   
   def fileView(self, event):
      selected = self.files.getSelectedIndices()
      selectedFile = self.files.getModel( ).getElementAt( selected[0])
      selectedFile = self.currentDirectory+ "/"+ selectedFile
      if (selectedFile.endswith(".jpg") or selectedFile.endswith(".JPG") or
          selectedFile.endswith(".png") or selectedFile.endswith(".PNG")
          ):
         pic = makePicture(selectedFile)
         show(pic)
      if selectedFile.endswith(".wav"):
         snd = makeSound(selectedFile)
         play(snd)
   #END DEF
   
   def changeDirectory(self, event):
      self.contentPane.remove(swing.JScrollPane)
      filesList = self.listFilesInDirectory()
      self.files = swing.JList(filesList)
      pane = swing.JScrollPane(self.files)
      self.contentPane.add(pane, java.awt.BorderLayout.CENTER)
      
      """
      fileView = swing.JButton("View Contents", size=(65,30),
                               actionPerformed = self.fileView)
      self.contentPane.add(fileView, java.awt.BorderLayout.EAST)
      changeDir = swing.JButton("Change Directory", size=(65,30),
                               actionPerformed = self.changeDirectory)
      self.contentPane.add(changeDir, java.awt.BorderLayout.SOUTH)
      """
      
      self.pack()
      self.visible = true
   #END DEF
   
   def listFilesInDirectory(self, directory = ""):
      if directory == "":
         chooser = swing.JFileChooser()
         chooser.setFileSelectionMode(swing.JFileChooser.DIRECTORIES_ONLY)
         chooser.setApproveButtonText("Select Folder")
         chooser.setDialogTitle("Select Folder to Show File List")
         val = None
         cancelCount = 0
         while (val != swing.JFileChooser.APPROVE_OPTION) and (cancelCount < 3):
            val = chooser.showDialog(self, None)
            if (val == swing.JFileChooser.CANCEL_OPTION):
               cancelCount += 1
         #END WHILE
         if (cancelCount == 3):
            if os.path.isdir( os.path.expanduser("~")+"/Desktop" ):
               self.currentDirectory = os.path.expanduser("~")+"/Desktop"
            else:
               self.currentDirectory = os.path.expanduser("~")+"/desktop"
            #END IF/ELSE
         else:
            self.currentDirectory = str(chooser.getSelectedFile())
         #END IF/ELSE
      else:
         self.currentDirectory = directory
      #END IF/ELSE
      
      tempFilesList = os.listdir(self.currentDirectory)
      toRemove = []
      for entry in tempFilesList:
         if ( (entry[0:1] == ".") or 
              (os.path.isdir(self.currentDirectory+"/"+entry)) or
              ((entry[-4:] != ".jpg") and (entry[-4:] != ".wav"))
            ):
            toRemove.append(entry)
         #END IF
      #END FOR
      
      for removing in toRemove:
         tempFilesList.remove(removing)
      #END FOR
      
      return tempFilesList
   #END DEF
   
   def testing(self, event):
      mywindow = swing.JFrame()
      mywindow.contentPane.add(swing.JLabel("I am here"), java.awt.BorderLayout.CENTER)
      mywindow.visible = true
   #END DEF
   def first(self, event):
      dir='C:\\Users\\Pilot\\My Documents\\CST 205\\pictures\\'
      if not os.path.exists(dir):
        os.makedirs(dir)
      x=0
      y=0
      value=0
      data = requestInteger("Please enter a picture size: ")
      picture=makeEmptyPicture(data,data)
      file=pickAFile()
      sound=makeSound(file)
      overall=(getNumSamples(sound))/(data*data)
      int(overall)
      pixelArray=getPixels(picture)
      pixelIndex=0
      for k in range (0, data):
        for i in range (0, data):
          total=0
          for j in range (0, overall):
            total+=getSampleValueAt(sound, ((k*overall*data)+(i*overall)+j))
          avg=total/overall
          if (avg<-50):
            pixelArray[pixelIndex].setColor(red)
          elif(avg<-25 and avg>=-50):
            pixelArray[pixelIndex].setColor(green)
          elif(avg<0 and avg>=-25):
            pixelArray[pixelIndex].setColor(blue)
          elif(avg<25 and avg>=0):
            pixelArray[pixelIndex].setColor(yellow)
          elif(avg<50 and avg>=25):
            pixelArray[pixelIndex].setColor(magenta)
          elif(avg>=50):
            pixelArray[pixelIndex].setColor(orange)
          pixelIndex+=1
        value=value+1
        if(value<10):
          writePictureTo(picture, dir+'photo000'+str(value)+'.jpg')
        elif(value<100):
          writePictureTo(picture, dir+'photo00'+str(value)+'.jpg')
        elif(value<1000):
          writePictureTo(picture, dir+'photo0'+str(value)+'.jpg')
        else:
          writePictureTo(picture, dir+'photo'+str(value)+'.jpg')
      show(picture)
      mov = makeMovieFromInitialFile(pickAFile())
      writeAVI(mov, dir+'newMovie.avi', 20)
  
   def second(self, event):
      s = pickAFile()
      sound = makeSound(s)
      soundValue = 0
      first = int(getLength(sound)/3)
      second = int(2*getLength(sound)/3)  
      file1 = makeEmptySound(first, 44100)
      file2 = makeEmptySound(second, 44100)
      file3 = makeEmptySound(getLength(sound), 44100)
  
      for sample in range(0, first):
        value = getSampleValueAt(sound, sample)
        setSampleValueAt(file1, sample, value*200)
  
      for sample in range(first-1, second):
        value = getSampleValueAt(sound, sample)
        setSampleValueAt(file2, sample, value*200)
  
      for sample in range(second-1, getLength(sound)):
        value = getSampleValueAt(sound, sample)
        setSampleValueAt(file3, sample, value*200)
  
      blockingPlay(file1)
      blockingPlay(file2)
      blockingPlay(file3)  
#END CLASS




# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# MAIN
import time
printNow("Please use this GUI to run some of our previous projects")
time.sleep(2)
fcv = FileContentsViewer()
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
